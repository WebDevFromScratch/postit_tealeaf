<p>
  <%= render @post.categories %>
</p>

<%= render 'shared/content_title', title: link_to("#{@post.title}", fix_url(@post))  %>

<p>
  <%= @post.description %>
</p>
<br/>
<% if logged_in? && @post.user == current_user %>
  <small><%= link_to("Edit", edit_post_path(@post), class: 'right') %></small>
<% end %>
<br/>

<hr/>

<!-- this below is code created by me to just try things out -->

<h4>Comments:</h4>

<% @post.reload.comments.each do |comment| %>
  <%= render 'posts/comment', comment: comment %>
<% end %>

<!-- .reload method fixes the bug when our comment fails validation (comment is saved in memory and associated to the @post object and our code tries to render a view for it but can't) - .reload just uses the data from our database and updates (re-freshes) it as @post.comments (without this last comment, that was saved in memory) -->
<!-- I actually don't need that here, since I used .new method in my comments#create action, instead of .create (or .build), so this is actually not saved. This would be needed if using the syntax from solutions -->

<hr/>

<!-- comments create form -->

<%= render 'shared/validation_error', object: @comment %>

<% if logged_in? %>
  <%= form_for [@post, @comment] do |f| %>
    <%= f.text_area :body %>
    <br/>
    <%= f.submit "Add Comment", class: "btn btn-primary" %>
  <% end %>
<% else %>
  <h4 class="text-center">You must be logged in to comment</h4>
<% end %>
